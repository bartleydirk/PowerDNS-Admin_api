#!/usr/bin/env python

from admin_api import fetch_remote, fetch_json, build_rrset
from pprint import pprint
from Crypto.Cipher import DES
from Crypto import Random
import sys

#iv = Random.get_random_bytes(8)
#des1 = DES.new('01234567', DES.MODE_CFB, iv)
#des2 = DES.new('01234567', DES.MODE_CFB, iv)
#text = 'abcdefghijklmnop'
#print 'text is "%s"' % text
#cipher_text = des1.encrypt(text)
#print cipher_text
#decrypted = des2.decrypt(cipher_text)
#print decrypted

from Crypto.PublicKey import RSA
from Crypto import Random

pubname = 'mypublickey.pem'
privname = 'myprivkey.pem'

try:
    pub_fv = open(pubname, 'r')
    pub_key = pub_fv.read()
    pub_fv.close()
    print 'pub_key %s' % pub_key
    red = True
except Exception:
    print "Pub Not read"
    red = False

priv_key = None
try:
    priv_fv = open(privname, 'r')
    priv_key = priv_fv.read()
    priv_fv.close()
    print 'priv_key %s' % priv_key
except Exception:
    print "priv Not read"

if red:
    if priv_key:
        key_withpriv = RSA.importKey(priv_key)
    key = RSA.importKey(pub_key)
else:
    random_generator = Random.new().read
    key = RSA.generate(4096, random_generator)
    print 'key is %s' % key
    pub_fv = open(pubname,'w')
    priv_fv = open(privname,'w')
    public_key = key.publickey()
    pub_fv.write(public_key.exportKey('PEM'))
    priv_fv.write(key.exportKey('PEM'))
    pub_fv.close()
    priv_fv.close()
    print "public and private key written"

print "can encrypt %s" % key.can_encrypt()
print "can sign %s" % key.can_sign()
print "has private %s" % key.has_private()

print 'public_key is %s' % pub_key
enc_data = key.encrypt('A fun Sting to encrypt', 32)
print "Encrypted data :"
print enc_data
print ""

decrypted = key_withpriv.decrypt(enc_data)
print 'decrypted is %s' % decrypted

#exportedprivate = key.exportKey()
#exportedpublic = key.publickey().exportKey()
#print 'exportedprivate %s' % (exportedprivate)
#print 'exportedpublic %s' % (exportedpublic)

print dir(RSA)

#headers = {}
#headers['X-API-Key'] = 'ASDFASDF'
#
#data = []
#
#data.append(build_rrset(name='fredd.spotx.tv.', ipaddr='192.168.2.92'))
##pprint(data)
##netdata = {"rrsets": data}
#
#url = 'http://localhost:9393/apitest'
#jdata = fetch_json(url, headers=headers, data=data, method='POST')
#
#print jdata
